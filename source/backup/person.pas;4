unit Person;

{$mode objfpc}{$H+}

interface

uses
  SysUtils, MyObjects;

type

          { TCnpj }

  TCnpj = class(TMyObject)

  end;

      { TCpf }

  TCpf = class(TMyObject)

  end;

  { TPerson }

  TPerson = class(TMyObject)
  private
    FActive: Boolean;
    FName: string;
  public
    constructor Create;
    procedure Validate;
  published
    property Active: Boolean read FActive write FActive default True;
    property Name: string read FName write FName;

  end;

    { TPersonJ }

  TPersonJ = class(TPerson)
  private
    FCnpj: TCnpj;
    FAdressBill: TAddress;
    function getAddressBill: TAddress;
    function getCnpj: TCnpj;
    procedure setAddressBill(AValue: TAddress);
    procedure setCnpj(AValue: TCnpj);

  public
    constructor Create;
    procedure Validate;
  published
    property Cnpj: TCnpj read getCnpj write setCnpj;
    property AddressBilling: TAddress read getAddressBill write setAddressBill;


  end;

implementation

{ TPersonJ }

function TPersonJ.getAddressBill: TAddress;
begin

end;

function TPersonJ.getCnpj: TCnpj;
begin

end;

procedure TPersonJ.setAddressBill(AValue: TAddress);
begin

end;

procedure TPersonJ.setCnpj(AValue: TCnpj);
begin

end;

constructor TPersonJ.Create;
begin

end;

procedure TPersonJ.Validate;
begin

end;

constructor TPerson.Create;
begin
  inherited;
  FActive := True;

end;

procedure TPerson.Validate;
begin
  Inherited;
  AssertData(FName <> '', 'Name must not be empty.');
end;

 //
end.

